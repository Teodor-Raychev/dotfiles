"" ~/.ideavimrc

"" General:
" ===========================================================
set scrolloff=10
set linenumber
set showmode
set showcmd
set smartcase
set incsearch
set hlsearch
set visualbell

" Use system clipboard
set clipboard+=unnamed

let mapleader = " "

"" Plugin Settings
"" ========================================================

set surround
set highlightedyank
set commentary
set NERDTree
set which-key
" set easymotion
" Easymotion settings
" set notimeout

" Which-key settings
let g:WhichKey_FontSize = 16
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"

let g:WhichKeyDesc_leader = "<leader> Leader key"

"" Key mappings
"" ========================================================

inoremap jk <Esc>

" delete word backwords"
nmap dw vb"_d
" system yank
vmap <leader>y "+y
vmap <leader>d "+d
vmap <leader>P "+P
vmap <leader>p "+p

nmap <leader>P "+P
nmap <leader>p "+p
nmap <leader>y "+yy

" move up and down
nmap <C-d> <C-d>zz
nmap <C-u> <C-u>zz

" Tab navigation 
nnoremap <CS-l> :tabnext<CR>
nnoremap <CS-h> :tabprev<CR>

" Pane navigation
" nnoremap <A-h> <C-w>h
" nnoremap <A-l> <C-w>l
" nnoremap <A-k> <C-w>k
" nnoremap <A-j> <C-w>j

" Jump between methods
nnoremap [[ <Action>(MethodUp)
nnoremap ]] <Action>(MethodDown)

" Easy visual indentation
" Shfit + > or < when in visual mode.
vnoremap < <gv
vnoremap > >gv

" Execute macro saved in 'q' register
nnoremap qj @q

" Popup navigation
inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)


"" Leader commands
"" ========================================================

" Comment lines
map <leader>c <action>(CommentByLineComment)

" Jump around with easymotion
map <leader>j <Plug>(easymotion-s)

" Open NERDTree (use q to exit)
" map <leader>e :NERDTreeToggle<CR>

" Highlight copy:
nmap <leader>h "viw<leader>y

" Folding
map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>

" Window splits
map <leader>wv <Action>(SplitVertically)
map <leader>ws <Action>(SplitHorizontally)
map <leader>wu <Action>(Unsplit)
map <leader>wm <Action>(MoveEditorToOppositeTabGroup)

" Display options
map <leader>dd <action>(ToggleDistractionFreeMode)
map <leader>dz <action>(ToggleZenMode)
map <leader>df <action>(ToggleFullScreen)

" Actions
" Intention action like convert to string and such.
map <leader>am <action>(ShowIntentionActions)
map <leader>as <action>(SearchEverywhere)

" File navigation
map <leader>ff <action>(GotoFile)
map <leader>fr <action>(RecentFiles)
map <leader>fc <action>(FindInPath)
map <leader><leader> <Action>(RecentFiles)
map <leader>fl <action>(RecentLocations)
map <leader>fs <action>(NewScratchFile)

" Close active tab
map <leader>q <action>(CloseContent)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

" Go to code
nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>gf <Action>(Back)
nmap <leader>gb <Action>(Forward)

" Git windows
map <leader>gc <Action>(CheckinProject)
map <leader>gs <Action>(ActivateVersionControlToolWindow)
map <leader>gb <Action>(Git.Branches)
